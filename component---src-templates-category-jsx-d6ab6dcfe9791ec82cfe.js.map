{"version":3,"sources":["webpack:///./src/components/ItemTagCategory.jsx","webpack:///./src/templates/category.jsx"],"names":["ItemTagCategory","category","path","title","date","timeToRead","excerpt","className","to","pageQuery","Category","pageContext","data","allMarkdownRemark","edges","totalCount","Helmet","config","siteTitle","Header","map","edge","key","node","frontmatter","fields","slug"],"mappings":"2OA6BeA,G,UAxBS,SAAC,GAAD,EAAGC,SAAH,IAAaC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,WAAYC,EAA5C,EAA4CA,QAA5C,OAEtB,kBAAC,IAAD,CAAMC,UAAU,mBAAmBC,GAAIN,GAErC,6BAASK,UAAU,wBAEjB,yBAAKA,UAAU,uBACb,wBAAIA,UAAU,qBACXJ,GAEH,uBAAGI,UAAU,oBACVH,EADH,oBACgCC,EADhC,QAGA,uBAAGE,UAAU,oBACVD,QC8CEG,GAbEC,UA3CE,SAAC,GAAD,IACAT,EADA,EACfU,YAAeV,SADA,IAEfW,KACEC,kBAAqBC,EAHR,EAGQA,MAHR,EAGeC,WAHf,OAOf,kBAAC,IAAD,KAEE,kBAACC,EAAA,EAAD,CAAQb,MAAUF,EAAL,MAAmBgB,IAAOC,YAEvC,kBAACC,EAAA,EAAD,CAAQhB,MAAOF,GAAf,YAIA,6BAASM,UAAU,cACjB,yBAAKA,UAAU,+BACZO,EAAMM,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEC,IAAKD,EAAKE,KAAKC,YAAYrB,MAC3BA,MAAOkB,EAAKE,KAAKC,YAAYrB,MAC7BF,SAAUoB,EAAKE,KAAKC,YAAYvB,SAChCC,KAAMmB,EAAKE,KAAKE,OAAOC,KACvBtB,KAAMiB,EAAKE,KAAKC,YAAYpB,KAC5BC,WAAYgB,EAAKE,KAAKlB,WACtBC,QAASe,EAAKE,KAAKjB,eAM3B,yBAAKC,UAAU,iBAEb,kBAAC,IAAD,CAAMA,UAAU,MAAMC,GAAE,gBAAxB,0BAuBgB","file":"component---src-templates-category-jsx-d6ab6dcfe9791ec82cfe.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'gatsby';\r\nimport kebabCase from 'lodash/kebabCase';\r\n\r\nconst ItemTagCategory = ({ category, path, title, date, timeToRead, excerpt }) => (\r\n\r\n  <Link className=\"post-block__item\" to={path}>\r\n\r\n    <article className=\"post-block__bordered\">\r\n\r\n      <div className=\"post-block__content\">\r\n        <h2 className=\"post-block__title\">\r\n          {title}\r\n        </h2>\r\n        <p className=\"post-block__date\">\r\n          {date} &mdash; Time to Read: {timeToRead} Min\r\n        </p>\r\n        <p className=\"post-block__text\">\r\n          {excerpt}\r\n        </p>\r\n      </div>\r\n\r\n    </article>\r\n\r\n  </Link>\r\n\r\n);\r\n\r\nexport default ItemTagCategory;\r\n\r\nItemTagCategory.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  timeToRead: PropTypes.number.isRequired,\r\n  excerpt: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Layout } from 'elements';\r\nimport config from '../../config/website';\r\nimport Header from '../components/Header';\r\nimport ItemTagCategory from '../components/ItemTagCategory';\r\n\r\nconst Category = ({\r\n  pageContext: { category },\r\n  data: {\r\n    allMarkdownRemark: { edges, totalCount },\r\n  },\r\n}) => (\r\n\r\n  <Layout>\r\n\r\n    <Helmet title={`${category} | ${config.siteTitle}`} />\r\n\r\n    <Header title={category}>\r\n      Category\r\n    </Header>\r\n\r\n    <section className=\"page-inner\">\r\n      <div className=\"post-block post-block--full\">\r\n        {edges.map(edge => (\r\n          <ItemTagCategory\r\n            key={edge.node.frontmatter.title}\r\n            title={edge.node.frontmatter.title}\r\n            category={edge.node.frontmatter.category}\r\n            path={edge.node.fields.slug}\r\n            date={edge.node.frontmatter.date}\r\n            timeToRead={edge.node.timeToRead}\r\n            excerpt={edge.node.excerpt}\r\n          />\r\n        ))}\r\n      </div>\r\n    </section>\r\n\r\n    <div className=\"align-central\">\r\n\r\n      <Link className=\"btn\" to={`/categories/`}>\r\n        View all Categories\r\n      </Link>\r\n\r\n    </div>\r\n\r\n  </Layout>\r\n\r\n);\r\n\r\nexport default Category;\r\n\r\nCategory.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    category: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.array.isRequired,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query CategoryPage($category: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { category: { eq: $category } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt(pruneLength: 170)\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD. MMMM YYYY\", locale: \"en\")\r\n            category\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}