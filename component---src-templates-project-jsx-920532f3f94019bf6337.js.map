{"version":3,"file":"component---src-templates-project-jsx-920532f3f94019bf6337.js","mappings":"yHAGA,MAAMA,EAASC,IAAA,IAAC,SAAEC,EAAQ,MAAEC,GAAOF,EAAA,OAE/BG,EAAAA,cAAA,MAAIC,UAAU,WAEZD,EAAAA,cAAA,OAAKC,UAAU,iCAAiCC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAC7EJ,EAAAA,cAAA,QAAMC,UAAU,OAAOI,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,EAAE,qeAG9FT,EAAAA,cAAA,YACGD,GAGHC,EAAAA,cAAA,OAAKC,UAAU,oCAAoCC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAChFJ,EAAAA,cAAA,QAAMC,UAAU,OAAOI,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,EAAE,qeAG3F,EAGT,MAOAb,EAAOc,aAAe,CACpBZ,UAAU,E,+CCcZ,IAxCoBD,IAAA,IAAC,KAAEc,EAAI,MAAEC,GAAOf,EAAA,OAElCG,EAAAA,cAAA,OAAKC,UAAU,+BAEZU,GACCX,EAAAA,cAACa,EAAAA,GAAI,CAACZ,UAAU,mBAAmBa,GAAIH,EAAKI,OAAOC,MAEjDhB,EAAAA,cAAA,WAASC,UAAU,wBAEjBD,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAA,MAAIC,UAAU,qBACXU,EAAKM,YAAYlB,UAS3Ba,GACCZ,EAAAA,cAACa,EAAAA,GAAI,CAACZ,UAAU,mBAAmBa,GAAIF,EAAMG,OAAOC,MAElDhB,EAAAA,cAAA,WAASC,UAAU,wBAEjBD,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAA,MAAIC,UAAU,qBACXW,EAAMK,YAAYlB,UASzB,C,oFC0BR,UA3DgBF,IAAwF,IAArFqB,aAAa,KAAEF,EAAI,MAAEjB,EAAK,KAAEY,EAAI,MAAEC,GAASO,MAAQC,eAAgBC,IAAYxB,EAChG,MAAMyB,EAAOD,EAASJ,YAItB,OAHKK,EAAKC,KACRD,EAAKC,GAAKP,GAGVhB,EAAAA,cAACwB,EAAAA,GAAM,KAELxB,EAAAA,cAACyB,EAAAA,GAAG,CAACC,SAAUV,EAAMK,SAAUA,EAAUM,SAAO,IAEhD3B,EAAAA,cAAA,OAAKC,UAAU,cAEbD,EAAAA,cAACJ,EAAAA,EAAM,CAACG,MAAOuB,EAAKvB,OACjBuB,EAAKvB,OAGRC,EAAAA,cAAA,MAAIC,UAAU,iBACZD,EAAAA,cAAA,MAAIC,UAAU,sBACZD,EAAAA,cAAA,UAAI,UACHsB,EAAKM,UAER5B,EAAAA,cAAA,MAAIC,UAAU,sBACZD,EAAAA,cAAA,UAAI,QACHsB,EAAKO,MAER7B,EAAAA,cAAA,MAAIC,UAAU,sBACZD,EAAAA,cAAA,UAAI,QACHsB,EAAKQ,OAIV9B,EAAAA,cAAA,WAASC,UAAU,WACjBD,EAAAA,cAAA,OAAKC,UAAU,8BACbD,EAAAA,cAAA,MAAIC,UAAU,kBAAiB,cAC/BD,EAAAA,cAAA,SACGsB,EAAKS,cAKZ/B,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,WAASC,UAAU,uBAAuB+B,KAAK,WAC7ChC,EAAAA,cAACiC,EAAAA,GAAO,CAACC,MAAOb,EAASc,SAI7BnC,EAAAA,cAAA,eACEA,EAAAA,cAAA,MAAIC,UAAU,yBAAwB,iBAGtCD,EAAAA,cAACoC,EAAAA,EAAW,CAACzB,KAAMA,EAAMC,MAAOA,MAK7B,C","sources":["webpack://portfolio/./src/components/Header.jsx","webpack://portfolio/./src/components/Suggestions.jsx","webpack://portfolio/./src/templates/project.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({ children, title }) => (\r\n\r\n    <h1 className=\"pinline\">\r\n\r\n      <svg className=\"pinline__svg pinline__svg--top\" width=\"80\" height=\"60\" viewBox=\"5 0 80 60\">\r\n        <path className=\"wave\" fill=\"none\" stroke=\"#80a89b\" strokeWidth=\"4\" strokeLinecap=\"round\" d=\"M 0 37.5 c 7.684299348848887 0 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15\" />\r\n      </svg>\r\n\r\n      <span>\r\n        {title}\r\n      </span>\r\n\r\n      <svg className=\"pinline__svg pinline__svg--bottom\" width=\"80\" height=\"40\" viewBox=\"5 0 80 40\">\r\n        <path className=\"wave\" fill=\"none\" stroke=\"#80a89b\" strokeWidth=\"4\" strokeLinecap=\"round\" d=\"M 0 37.5 c 7.684299348848887 0 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15\" />\r\n      </svg>\r\n\r\n    </h1>\r\n);\r\n\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n  children: PropTypes.any,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  children: false,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'gatsby';\r\n\r\nconst Suggestions = ({ left, right }) => (\r\n\r\n  <div className=\"post-block post-block--half\">\r\n\r\n    {left && (\r\n      <Link className=\"post-block__item\" to={left.fields.slug}>\r\n\r\n        <article className=\"post-block__bordered\">\r\n\r\n          <div className=\"post-block__content\">\r\n            <h2 className=\"post-block__title\">\r\n              {left.frontmatter.title}\r\n            </h2>\r\n          </div>\r\n\r\n        </article>\r\n\r\n      </Link>\r\n    )}\r\n\r\n    {right && (\r\n      <Link className=\"post-block__item\" to={right.fields.slug}>\r\n\r\n        <article className=\"post-block__bordered\">\r\n\r\n          <div className=\"post-block__content\">\r\n            <h2 className=\"post-block__title\">\r\n              {right.frontmatter.title}\r\n            </h2>\r\n          </div>\r\n\r\n        </article>\r\n\r\n      </Link>\r\n    )}\r\n\r\n  </div>\r\n\r\n);\r\n\r\nexport default Suggestions;\r\n\r\nSuggestions.propTypes = {\r\n  left: PropTypes.any.isRequired,\r\n  right: PropTypes.any.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, graphql } from 'gatsby';\r\nimport Header from '../components/Header';\r\nimport { SEO, Content, Layout } from 'elements';\r\nimport Suggestions from '../components/Suggestions';\r\n\r\nconst Project = ({ pageContext: { slug, title, left, right }, data: { markdownRemark: postNode } }) => {\r\n  const post = postNode.frontmatter;\r\n  if (!post.id) {\r\n    post.id = slug;\r\n  }\r\n  return (\r\n    <Layout>\r\n\r\n      <SEO postPath={slug} postNode={postNode} postSEO />\r\n\r\n      <div className=\"page-inner\">\r\n\r\n        <Header title={post.title}>\r\n          {post.title}\r\n        </Header>\r\n\r\n        <ul className=\"project__meta\">\r\n          <li className=\"project__meta-item\">\r\n            <h2>Client</h2>\r\n            {post.customer}\r\n          </li>\r\n          <li className=\"project__meta-item\">\r\n            <h2>Role</h2>\r\n            {post.task}\r\n          </li>\r\n          <li className=\"project__meta-item\">\r\n            <h2>When</h2>\r\n            {post.when}\r\n          </li>\r\n        </ul>\r\n\r\n        <section className=\"callout\">\r\n          <div className=\"page-content align-central\">\r\n            <h2 className=\"callout__title\">Activities</h2>\r\n            <p>\r\n              {post.activities}\r\n            </p>\r\n          </div>\r\n        </section>\r\n\r\n        <div className=\"page-text\">\r\n          <article className=\"content page-content\" type=\"article\">\r\n            <Content input={postNode.html} />\r\n          </article>\r\n        </div>\r\n\r\n        <section>\r\n          <h3 className=\"heading align-central\">\r\n            More Projects\r\n          </h3>\r\n          <Suggestions left={left} right={right} />\r\n        </section>\r\n\r\n      </div>\r\n\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n\r\nProject.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    slug: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.object.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query ProjectPostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"DD.MM.YYYY\")\r\n        customer\r\n        task\r\n        company\r\n        activities\r\n        when\r\n      }\r\n      fields {\r\n        slug\r\n        sourceInstanceName\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["Header","_ref","children","title","React","className","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","d","defaultProps","left","right","Link","to","fields","slug","frontmatter","pageContext","data","markdownRemark","postNode","post","id","Layout","SEO","postPath","postSEO","customer","task","when","activities","type","Content","input","html","Suggestions"],"sourceRoot":""}