{"version":3,"file":"component---src-pages-index-jsx-b8c86ef42283d4681c98.js","mappings":"yHAGA,MAAMA,EAASC,IAAA,IAAC,SAAEC,EAAQ,MAAEC,GAAOF,EAAA,OAE/BG,EAAAA,cAAA,MAAIC,UAAU,WAEZD,EAAAA,cAAA,OAAKC,UAAU,iCAAiCC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAC7EJ,EAAAA,cAAA,QAAMC,UAAU,OAAOI,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,EAAE,qeAG9FT,EAAAA,cAAA,YACGD,GAGHC,EAAAA,cAAA,OAAKC,UAAU,oCAAoCC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAChFJ,EAAAA,cAAA,QAAMC,UAAU,OAAOI,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,cAAc,QAAQC,EAAE,qeAG3F,EAGT,MAOAb,EAAOc,aAAe,CACpBZ,UAAU,E,6IC1BZ,MAAMa,EAAed,IAAA,IAAC,KAAEe,EAAI,SAAEC,EAAQ,KAAEC,EAAI,MAAEf,GAAOF,EAAA,OAEnDG,EAAAA,cAACe,EAAAA,GAAI,CAACd,UAAU,mBAAmBe,GAAIJ,GAErCZ,EAAAA,cAAA,OAAKC,UAAU,wBAEbD,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAA,MAAIC,UAAU,qBACXF,GAEHC,EAAAA,cAAA,KAAGC,UAAU,oBACVa,KAMF,EAYTH,EAAaD,aAAe,CAC1BG,SAAU,mBCNZ,MAxBwBhB,IAAA,IAAC,KAAEe,EAAI,MAAEb,EAAK,KAAEkB,EAAI,WAAEC,GAAYrB,EAAA,OAEtDG,EAAAA,cAACe,EAAAA,GAAI,CAACd,UAAU,mBAAmBe,GAAIJ,GAEvCZ,EAAAA,cAAA,OAAKC,UAAU,wBAEbD,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAA,MAAIC,UAAU,qBACXF,GAEHC,EAAAA,cAAA,KAAGC,UAAU,oBACVgB,GAEHjB,EAAAA,cAAA,KAAGC,UAAU,oBACViB,KAMF,EC4DT,MAxEcrB,IAAA,IACZsB,MACEC,UAAYC,MAAOC,GACnBC,OAASF,MAAOG,KAEnB3B,EAAA,OACCG,EAAAA,cAACyB,EAAAA,GAAM,KAELzB,EAAAA,cAAC0B,EAAAA,EAAM,CAAC3B,MAAQ,GAAE4B,IAAAA,cAElB3B,EAAAA,cAACJ,EAAAA,EAAM,CAACG,MAAM,eAAc,eAI5BC,EAAAA,cAAA,WAASC,UAAU,cAEjBD,EAAAA,cAAA,OAAKC,UAAU,8BACbD,EAAAA,cAAA,SAAG,kRAIHA,EAAAA,cAAA,SAAG,ihBAOLA,EAAAA,cAAA,OAAKC,UAAU,gBAEbD,EAAAA,cAAA,MAAIC,UAAU,WAAU,iBAIxBD,EAAAA,cAAA,OAAKC,UAAU,+BACZqB,EAAaM,KAAIC,GAChB7B,EAAAA,cAAC8B,EAAe,CACdC,IAAKF,EAAQG,KAAKC,YAAYlC,MAC9BmC,SAAUL,EAAQG,KAAKC,YAAYC,SACnCtB,KAAMiB,EAAQG,KAAKG,OAAOC,KAC1BrC,MAAO8B,EAAQG,KAAKC,YAAYlC,MAChCkB,KAAMY,EAAQG,KAAKC,YAAYhB,KAC/BC,WAAYW,EAAQG,KAAKC,YAAYf,kBA2BxC,C","sources":["webpack://portfolio/./src/components/Header.jsx","webpack://portfolio/./src/components/FeaturedPost.jsx","webpack://portfolio/./src/components/FeaturedProject.jsx","webpack://portfolio/./src/pages/index.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({ children, title }) => (\r\n\r\n    <h1 className=\"pinline\">\r\n\r\n      <svg className=\"pinline__svg pinline__svg--top\" width=\"80\" height=\"60\" viewBox=\"5 0 80 60\">\r\n        <path className=\"wave\" fill=\"none\" stroke=\"#80a89b\" strokeWidth=\"4\" strokeLinecap=\"round\" d=\"M 0 37.5 c 7.684299348848887 0 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15\" />\r\n      </svg>\r\n\r\n      <span>\r\n        {title}\r\n      </span>\r\n\r\n      <svg className=\"pinline__svg pinline__svg--bottom\" width=\"80\" height=\"40\" viewBox=\"5 0 80 40\">\r\n        <path className=\"wave\" fill=\"none\" stroke=\"#80a89b\" strokeWidth=\"4\" strokeLinecap=\"round\" d=\"M 0 37.5 c 7.684299348848887 0 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15 s 7.172012725592294 15 15 15 s 7.172012725592294 -15 15 -15\" />\r\n      </svg>\r\n\r\n    </h1>\r\n);\r\n\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n  children: PropTypes.any,\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  children: false,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'gatsby';\r\n\r\nconst FeaturedPost = ({ path, category, date, title }) => (\r\n\r\n  <Link className=\"post-block__item\" to={path}>\r\n\r\n    <div className=\"post-block__bordered\">\r\n\r\n      <div className=\"post-block__content\">\r\n        <h2 className=\"post-block__title\">\r\n          {title}\r\n        </h2>\r\n        <p className=\"post-block__text\">\r\n          {date}\r\n        </p>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </Link>\r\n\r\n);\r\n\r\nexport default FeaturedPost;\r\n\r\nFeaturedPost.propTypes = {\r\n  path: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nFeaturedPost.defaultProps = {\r\n  category: 'User Experience',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'gatsby';\r\n\r\nconst FeaturedProject = ({ path, title, task, activities }) => (\r\n\r\n    <Link className=\"post-block__item\" to={path}>\r\n\r\n    <div className=\"post-block__bordered\">\r\n\r\n      <div className=\"post-block__content\">\r\n        <h2 className=\"post-block__title\">\r\n          {title}\r\n        </h2>\r\n        <p className=\"post-block__text\">\r\n          {task}\r\n        </p>\r\n        <p className=\"post-block__desc\">\r\n          {activities}\r\n        </p>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </Link>\r\n\r\n);\r\n\r\nexport default FeaturedProject;\r\n\r\nFeaturedProject.propTypes = {\r\n  path: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","/* eslint max-len: 0 */\r\n\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, graphql } from 'gatsby';\r\nimport { Layout } from 'elements';\r\nimport Header from '../components/Header';\r\nimport config from '../../config/website';\r\nimport FeaturedPost from '../components/FeaturedPost';\r\nimport FeaturedProject from '../components/FeaturedProject';\r\n\r\nconst Index = ({\r\n  data: {\r\n    projects: { edges: projectEdges },\r\n    posts: { edges: postEdges },\r\n  },\r\n}) => (\r\n  <Layout>\r\n\r\n    <Helmet title={`${config.siteTitle}`} />\r\n\r\n    <Header title=\"Emily Young\">\r\n      Emily Young\r\n    </Header>\r\n\r\n    <section className=\"page-inner\">\r\n\r\n      <div className=\"page-content align-central\">\r\n        <p>\r\n          A User Researcher whose passion lies in crafting clean, intuitive, and inclusive experiences that resonate with a broad audience. \r\n          I am dedicated to distilling complex problems into elegantly simple solutions, always with the goal of enhancing digital human interactions.\r\n        </p>\r\n        <p>\r\n          With over a decade of experience, I have been instrumental in integrating UX and User Research methodologies into various teams. \r\n          My expertise encompasses working with a wide range of stakeholders, including C-suite executives, Product Managers, Designers, Engineers, and Marketers, ultimately influencing decision-making processes and product strategies. \r\n          My approach is deeply rooted in a commitment to understanding user needs and behaviors, ensuring that every project I undertake is user-centered and designed for impact.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"page-content\">\r\n\r\n        <h2 className=\"content\">\r\n          Featured Work\r\n        </h2>\r\n\r\n        <div className=\"post-block post-block--half\">\r\n          {projectEdges.map(project => (\r\n            <FeaturedProject\r\n              key={project.node.frontmatter.title}\r\n              customer={project.node.frontmatter.customer}\r\n              path={project.node.fields.slug}\r\n              title={project.node.frontmatter.title}\r\n              task={project.node.frontmatter.task}\r\n              activities={project.node.frontmatter.activities}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        {/*\r\n        <h2 className=\"content\">\r\n          Featured Writing\r\n        </h2>\r\n\r\n        <div className=\"post-block post-block--half\">\r\n          {postEdges.map(post => (\r\n            <FeaturedPost\r\n              key={post.node.frontmatter.title}\r\n              date={post.node.frontmatter.date}\r\n              path={post.node.fields.slug}\r\n              title={post.node.frontmatter.title}\r\n              category={post.node.frontmatter.category}\r\n            />\r\n          ))}\r\n        </div>\r\n        */}\r\n\r\n        </div>\r\n\r\n    </section>\r\n\r\n  </Layout>\r\n);\r\n\r\nexport default Index;\r\n\r\nIndex.propTypes = {\r\n  data: PropTypes.shape({\r\n    projects: PropTypes.shape({\r\n      edges: PropTypes.array.isRequired,\r\n    }),\r\n    posts: PropTypes.shape({\r\n      edges: PropTypes.array.isRequired,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query IndexQuery {\r\n    projects: allMarkdownRemark(\r\n      limit: 2\r\n      sort: {frontmatter: {date: DESC}}\r\n      filter: {fields: {sourceInstanceName: {eq: \"projects\"}}}\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            customer\r\n            title\r\n            task\r\n            activities\r\n          }\r\n        }\r\n      }\r\n    }\r\n    posts: allMarkdownRemark(\r\n      limit: 3\r\n      sort: {frontmatter: {date: DESC}}\r\n      filter: {fields: {sourceInstanceName: {eq: \"blog\"}}}\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD.MM.YYYY\")\r\n            category\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["Header","_ref","children","title","React","className","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","d","defaultProps","FeaturedPost","path","category","date","Link","to","task","activities","data","projects","edges","projectEdges","posts","postEdges","Layout","Helmet","config","map","project","FeaturedProject","key","node","frontmatter","customer","fields","slug"],"sourceRoot":""}